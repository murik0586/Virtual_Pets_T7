from entity.PetState import PetState

class Pet():
    ##todo –î–õ–Ø –í–°–ï–•, —è –¥–æ–±–∞–≤–ª—é –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ–≥–æ —á—Ç–æ —è —Å–¥–µ–ª–∞–ª, –≤ —Å–ª—É—á–∞–µ –Ω–µ—Å–æ—Å—Ç—ã–∫–æ–≤–∫–∏ –ª–æ–≥–∏–∫–∏ - –¥–∞–π—Ç–µ –∑–Ω–∞—Ç—å, –∏—Å–ø—Ä–∞–≤–ª—é!
    type_of_pet = "–ü–∏—Ç–æ–º–µ—Ü" #–≠—Ç–æ –ø–æ–ª–µ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ __str__ - —Å—Ç—Ä —ç—Ç–æ –∞–Ω–∞–ª–æ–≥ toString() –∏–∑ java
    def __init__(self, name: str, health: int = 5):  # –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
        self.__name = name  # –∫–ª–∏—á–∫–∞
        self.state = PetState(health)
        # todo –ø–æ –∑–∞–¥–∞–Ω–∏—é, –∑–∞–¥–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏, –Ω–æ –µ—Å–ª–∏ —Å–¥–µ–ª–∞—Ç—å –±–æ–ª—å—à–æ–µ –∫–æ–ª –æ—á–∫–æ–≤
        # —Ç–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è —Ç–∞–∫, —á—Ç–æ —Ç–µ—Å—Ç–∏—Ç—å –¥–æ–ª–≥–æ –≤ –ø–µ—Ä–≤–æ–µ –≤—Ä–µ–º—è, –ø–æ—Ç–æ–º—É, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ö–ø
        # –±—É–¥–µ—Ç –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç –∂–∏–≤–æ—Ç–Ω–æ–≥–æ

    ##–ì–µ—Ç—Ç–µ—Ä—ã –ú—É—Ä–∞—Ç
    @property  # –≠—Ç–æ —Å–∏–≥–Ω–∞—Ç—É—Ä–∞ –¥–ª—è –≥–µ—Ç—Ç–µ—Ä–∞!
    def name(self):
        return self.__name  # –ì–µ—Ç—Ç–µ—Ä—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –ø—Ä–æ—Å—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª–µ–π(—Å–≤–æ–π—Å—Ç–≤)

    ##–°–µ—Ç—Ç–µ—Ä—ã –ú—É—Ä–∞—Ç
    @name.setter  # –°–∏–≥–Ω–∞—Ç—É—Ä–∞ –¥–ª—è —Å–µ—Ç—Ç–µ—Ä–∞
    def name(self, name: str):
        if len(name) <= 2:  # –£—Å–ª–æ–≤–∏–µ, —á—Ç–æ –Ω–µ–ª—å–∑—è –∏–º—è –¥–∞—Ç—å –º–µ–Ω—å—à–µ –ø–æ –¥–ª–∏–Ω–µ
            print("–ù–∏–∫–Ω–µ–π–º(–ö–ª–∏—á–∫–∞) –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç –¥–≤—É—Ö —Å–∏–º–≤–æ–ª–æ–≤")
            return
        else:
            self.__name = name

    '''@health.setter
    def health(self, health: int):
        if health < 0:  # –Ω–µ –¥–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –º–µ–Ω—å—à–µ –Ω—É–ª—è –∏–ª–∏ 0(–ø–æ –ª–æ–≥–∏–∫–µ —Ç–æ–≥–¥–∞ –ø–∏—Ç–æ–º–µ—Ü –¥–æ–ª–∂–µ–Ω –∏—Å—á–µ–∑–Ω—É—Ç—å)
            health = 0
            print("–û–±–æ–π–¥–µ–º—Å—è —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏ –±–æ–ª—å—à–µ 0!")
        self.__health = health
        if health <= 0:
            print("–ü–∏—Ç–æ–º–µ—Ü —É–º–µ—Ä –æ—Ç –≥–æ–ª–æ–¥–∞! üíÄ")

    @happiness.setter
    def happiness(self, happiness: int):
        if happiness <= 0:
            print("–û–±–æ–π–¥–µ–º—Å—è —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏ –±–æ–ª—å—à–µ 0!")
            return
        elif happiness > 20:
            self.__happiness = 20  # –°–ø–µ—Ü–æ–º —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è, –∏ –Ω–µ –¥–∞–µ–º –≤—ã–π—Ç–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã
            print("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –¥–æ—Å—Ç–∏–≥–Ω—É—Ç!")
            return
        self.__happiness = happiness

    @hunger.setter
    def hunger(self, hunger: int):
        if hunger <= 0:
            print("–û–±–æ–π–¥–µ–º—Å—è —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏ –±–æ–ª—å—à–µ 0!")
            return
        elif hunger > 5:
            self.__health -= self.__hunger_penalty  # –û—Ç–Ω–∏–º–∞–µ–º —Ç–µ–∫—É—â–∏–π —à—Ç—Ä–∞—Ñ
            self.__hunger = hunger
            #points_health = self.__points_health - 1  –ù–µ –Ω—É–∂–Ω–æ —Ç.–∫. —É–∂–µ –æ—Ç–Ω—è–ª–∏
            print(f"–ö—Ä–∏—Ç–∏—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –≥–æ–ª–æ–¥–∞! -{self.__hunger_penalty}hp, –∑–¥–æ—Ä–æ–≤—å–µ: {self.__health}")
            self.__hunger_penalty += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —à—Ç—Ä–∞—Ñ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞–∑–∞
        else:
            self.__hunger_penalty = 1 # –ï—Å–ª–∏ –≥–æ–ª–æ–¥ <= 5 ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —à—Ç—Ä–∞—Ñ (–ø–∏—Ç–æ–º–µ—Ü –ø–æ–µ–ª)
            #return
        self.__hunger = hunger #–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ –∫—Ä–æ–º–µ —Ç–æ–≥–æ –∫–æ–≥–¥–∞ hunger_level <= 0

    # TODO –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º: –Ω–∞–º —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏–º–µ—Ç—å —Å–≤–æ–∏ –º–µ—Ç–æ–¥—ã
    #  –∞ —É –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –±—É–¥—É—Ç –º–µ—Ç–æ–¥—ã "–ø–∏—Ç—å, –µ—Å—Ç—å –∏ —Ç.–¥ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–∑—ã–≤–∞—é—Ç—Å—è –≤ –º–µ—Ç–æ–¥–∞—Ö —é–∑–µ—Ä–∞"
    #  –∏–ª–∏ –∂–µ –æ—Å—Ç–∞–≤–∏–º –∏—Ö —Ç—É—Ç, —â–∞—Å —è –Ω–µ –¥—É–º–∞—é —á—Ç–æ —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ,

    # todo –∫–æ–Ω–µ—á–Ω–æ –∂–µ —ç—Ç–æ –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è —É –∫–∞–∂–¥–æ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ'''

    def feed(self):
        # todo –ò–≥–æ—Ä—å
        """–ø–æ–∫–æ—Ä–º–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞.
        -2 –∫ –≥–æ–ª–æ–¥—É"""
        if not self.state.is_alive:
            return
        self.state.hunger -= 2

    def stroke(self):
        """–ø–æ–≥–ª–∞–¥–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞.
        + 1 –∫ —Å—á–∞—Å—Ç—å—é, +1 –∫ –≥–æ–ª–æ–¥—É"""
        if not self.state.is_alive:
            return
        self.state.happiness += 1
        self.state.hunger += 1

    def give_treat(self):
        """–¥–∞—Ç—å –≤–∫—É—Å–Ω—è—à–∫—É –ø–∏—Ç–æ–º—Ü—É.
        +2 –∫ —Å—á–∞—Å—Ç—å—é,- 1 –∫ –≥–æ–ª–æ–¥—É"""
        self.state.happiness += 2
        self.state.hunger -= 1

    def walk(self):
        """–ø–æ–≥—É–ª—è—Ç—å —Å –ø–∏—Ç–æ–º—Ü–µ–º.
        + 1 –∫ —Å—á–∞—Å—Ç—å—é, + 3 –∫ –≥–æ–ª–æ–¥—É +2 –∫ –∂–∞–∂–¥–µ"""
        print(f"{self.name} –∏–¥–µ—Ç –Ω–∞ –ø—Ä–æ–≥—É–ª–∫—É!")
        self.state.happiness += 1
        self.state.hunger += 3

    def ignore(self):
        """–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∏—Ç–æ–º—Ü–∞.
        -1 –∫ —Å—á–∞—Å—Ç—å—é, + 1 –∫ –≥–æ–ª–æ–¥—É"""
        self.state.happiness -= 1
        self.state.hunger += 1

    def __str__(self):
        return (f"–ò–º—è: {self.name}\n"
                f"{self.state}")